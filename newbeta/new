--UI 
local G2L = {};

-- StarterGui.ui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[ui]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

-- StarterGui.ui.auto chest
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(171, 255, 255);
G2L["2"]["BackgroundTransparency"] = 0.6499999761581421;
G2L["2"]["Size"] = UDim2.new(0, 250, 0, 250);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Position"] = UDim2.new(0.3122515082359314, 0, 0.1171712651848793, 0);
G2L["2"]["Name"] = [[auto chest]];

-- StarterGui.ui.auto chest.TextLabel
G2L["3"] = Instance.new("TextLabel", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(171, 255, 255);
G2L["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3"]["TextSize"] = 20;
G2L["3"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Size"] = UDim2.new(0, 247, 0, 63);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Text"] = [[Dakii Auto Chest]];
G2L["3"]["BackgroundTransparency"] = 1;
G2L["3"]["Position"] = UDim2.new(0.012000000104308128, 0, 0, 0);

-- StarterGui.ui.auto chest.TextLabel.UICorner
G2L["4"] = Instance.new("UICorner", G2L["3"]);


-- StarterGui.ui.auto chest.TextBox
G2L["5"] = Instance.new("ImageLabel", G2L["2"]);
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["Selectable"] = true;
G2L["5"]["Image"] = [[rbxassetid://15933497653]];
G2L["5"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5"]["Active"] = true;
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Name"] = [[TextBox]];
G2L["5"]["BackgroundTransparency"] = 1;

-- StarterGui.ui.auto chest.TextBox.UICorner
G2L["6"] = Instance.new("UICorner", G2L["5"]);


-- StarterGui.ui.auto chest.TextLabel
G2L["7"] = Instance.new("TextLabel", G2L["2"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(171, 255, 255);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/Nunito.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["TextSize"] = 15;
G2L["7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Size"] = UDim2.new(0, 247, 0, 63);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[made by dakii | m1m]];
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Position"] = UDim2.new(0.012000000104308128, 0, 0.06400000303983688, 0);

-- StarterGui.ui.auto chest.TextLabel.UICorner
G2L["8"] = Instance.new("UICorner", G2L["7"]);


-- StarterGui.ui.auto chest.UICorner
G2L["9"] = Instance.new("UICorner", G2L["2"]);


-- StarterGui.ui.auto chest.UIStroke
G2L["a"] = Instance.new("UIStroke", G2L["2"]);


-- StarterGui.ui.auto chest.TextLabel
G2L["b"] = Instance.new("TextLabel", G2L["2"]);
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextYAlignment"] = Enum.TextYAlignment.Bottom;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["TextSize"] = 20;
G2L["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Size"] = UDim2.new(0, 88, 0, 29);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["Position"] = UDim2.new(0.328000009059906, 0, 0.8840000629425049, 0);

-- StarterGui.ui.auto chest.TextLabel.UICorner
G2L["c"] = Instance.new("UICorner", G2L["b"]);


-- StarterGui.ui.auto chest.TextLabel.UIStroke
G2L["d"] = Instance.new("UIStroke", G2L["b"]);


-- StarterGui.ui.auto chest.TextLabel.LocalScript
G2L["e"] = Instance.new("LocalScript", G2L["b"]);


-- StarterGui.ui.auto chest.TextLabel.LocalScript
local function C_e()
local script = G2L["e"];
	local timer = script.Parent
	local  min = 0
	local  sec = 0
	
	repeat 
			if sec>= 59 then 
				min = min +1
			sec = 0
		else 
			sec = sec +1
		end	
		if sec < 9 and min < 9 then 
			timer.Text ="0"..tostring(min)..":0"..tostring(sec)
		else
			timer.Text = tostring(min)..":"..tostring(sec)
		end
		wait(1)
	until min > 100000 and sec > 10000000
	
	
end;
task.spawn(C_e);

--team

spawn(function()
    while task.wait() do
    if _G.ChestBypass then
        local ohString1 = "SetTeam"
        local ohString2 = "Pirates"
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(ohString1, ohString2)
     end
    end
    end)


--check body
spawn(function()
    while task.wait() do
        pcall(function()
            if _G.chestsea2 or _G.chestsea3 then
                if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                    local Noclip = Instance.new("BodyVelocity")
                    Noclip.Name = "BodyClip"
                    Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                    Noclip.MaxForce = Vector3.new(100000,100000,100000)
                    Noclip.Velocity = Vector3.new(0,0,0)
                end
            else
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
            end
        end)
    end
end)


--check hop 
function Hop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    function TPReturner()
        local Site;
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0;
        for i,v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _,Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(4)
                end
            end
        end
    end
    function Teleport() 
        while wait() do
            pcall(function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end)
        end
    end
    Teleport()
end  
--anti reset
assert(getrawmetatable)
    grm = getrawmetatable(game)
    setreadonly(grm, false)
    old = grm.__namecall
    grm.__namecall = newcclosure(function(self, ...)
        local args = {...}
        if tostring(args[1]) == "TeleportDetect" then
            return
        elseif tostring(args[1]) == "CHECKER_1" then
            return
        elseif tostring(args[1]) == "CHECKER" then
            return
        elseif tostring(args[1]) == "GUI_CHECK" then
            return
        elseif tostring(args[1]) == "OneMoreTime" then
            return
        elseif tostring(args[1]) == "checkingSPEED" then
            return
        elseif tostring(args[1]) == "BANREMOTE" then
            return
        elseif tostring(args[1]) == "PERMAIDBAN" then
            return
        elseif tostring(args[1]) == "KICKREMOTE" then
            return
        elseif tostring(args[1]) == "BR_KICKPC" then
            return
        elseif tostring(args[1]) == "BR_KICKMOBILE" then
            return
        end
        return old(self, ...)
end)

getgenv().A = require(game:GetService("ReplicatedStorage").CombatFramework.RigLib).wrapAttackAnimationAsync
getgenv().B = require(game.Players.LocalPlayer.PlayerScripts.CombatFramework.Particle).play
_G.setfflag = true
spawn(function()
    while wait() do
        if _G.setfflag then
            setfflag("AbuseReportScreenshot", "False")
            setfflag("AbuseReportScreenshotPercentage", "0")
        end
    end
end)

_G.SafeFarm = true
spawn(function()
    while wait() do
        if _G.SafeFarm then
            for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                if v:IsA("LocalScript") then
                    if
                        v.Name == "General" or v.Name == "Shiftlock" or v.Name == "FallDamage" or v.Name == "4444" or
                        v.Name == "CamBob" or
                        v.Name == "JumpCD" or
                        v.Name == "Looking" or
                        v.Name == "Run"
                    then
                        v:Destroy()
                    end
                end
            end
            for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerScripts:GetDescendants()) do
                if v:IsA("LocalScript") then
                    if
                        v.Name == "RobloxMotor6DBugFix" or v.Name == "Clans" or v.Name == "Codes" or
                        v.Name == "CustomForceField" or
                        v.Name == "MenuBloodSp" or
                        v.Name == "PlayerList"
                    then
                        v:Destroy()
                    end
                end
            end
        else
            game.Players.LocalPlayer:Kick("Please don't turn off safe farm if you don't want to get banned")
        end
    end
end)
--tween
function Tween2(P1)
    local Distance = (P1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    if Distance >= 1 then
    Speed = 250
    end
    game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear), {
      CFrame = P1
    }):Play()
    if _G.CancelTween2 then
    game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear), {
      CFrame = P1
    }):Cancel()
    end
    _G.Clip2 = true
    wait(Distance/Speed)
    _G.Clip2 = false
    end
--auto chest
game:GetService('RunService').RenderStepped:connect(function()           
    if _G.chestsea3 then
   if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("God's Chalice") then 
  _G.chestsea3 = true                      
   elseif not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("God's Chalice") then 
     if game:GetService("Workspace"):FindFirstChild("Chest1") then
    TPchest( game:GetService("Workspace"):FindFirstChild("Chest1").CFrame)
    end
    if game:GetService("Workspace"):FindFirstChild("Chest2") then
    TPchest( game:GetService("Workspace"):FindFirstChild("Chest2").CFrame)
    end
    if game:GetService("Workspace"):FindFirstChild("Chest3") then
TPchest( game:GetService("Workspace"):FindFirstChild("Chest3").CFrame)
end
end
end
end)
if game.PlaceId == 7449423635 then -- sea3
spawn(function()
   while task.wait(3.5) do
       pcall(function()
       if not   game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("God's Chalice") then
           if _G.chestsea3 then
               game:GetService("VirtualInputManager"):SendKeyEvent(true,"Q",true,game)
           game.Players.LocalPlayer.Character.Humanoid.Health = 0
           end
           wait(5)
          end 
        end)
     end
     end) 
    end
game:GetService('RunService').RenderStepped:connect(function()           
    if _G.chestsea2 then
   if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fist of Darkness") then 
       game:GetService("VirtualInputManager"):SendKeyEvent(true,"Q",true,game)
  _G.chestsea2 = true                         
   elseif not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fist of Darkness") then 
     if game:GetService("Workspace"):FindFirstChild("Chest1") then
    TPchest( game:GetService("Workspace"):FindFirstChild("Chest1").CFrame)
    end
    if game:GetService("Workspace"):FindFirstChild("Chest2") then
    TPchest( game:GetService("Workspace"):FindFirstChild("Chest2").CFrame)
    end
    if game:GetService("Workspace"):FindFirstChild("Chest3") then
TPchest( game:GetService("Workspace"):FindFirstChild("Chest3").CFrame)
end
end
end
end)
if game.PlaceId == 4442272183 then -- sea2
spawn(function()
   while task.wait(3.5) do
       pcall(function()
       if not   game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Fist of Darkness") then
           if _G.chestsea2 then
           game.Players.LocalPlayer.Character.Humanoid.Health = 0
           end
           wait(5)
          end 
        end) 
    end 
end) 
end
           
function TPchest(P1)          
            local Distance = (P1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
              if Distance >= 0 then
                Speed = 1200000
                end
                local tween =  game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Distance/Speed), {CFrame = P1  }) tween:Play()                                    
             end


    wait(180) do
Hop()
    end
